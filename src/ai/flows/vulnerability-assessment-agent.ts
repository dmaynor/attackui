'use server';

/**
 * @fileOverview Vulnerability Assessment Agent that prioritizes identified vulnerabilities.
 *
 * - prioritizeVulnerabilities - A function that assesses and prioritizes vulnerabilities.
 * - PrioritizeVulnerabilitiesInput - The input type for the prioritizeVulnerabilities function.
 * - PrioritizeVulnerabilitiesOutput - The return type for the prioritizeVulnerabilities function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PrioritizeVulnerabilitiesInputSchema = z.object({
  vulnerabilityData: z.string().describe('Detailed data about the identified vulnerabilities.'),
});
export type PrioritizeVulnerabilitiesInput = z.infer<typeof PrioritizeVulnerabilitiesInputSchema>;

const PrioritizeVulnerabilitiesOutputSchema = z.object({
  prioritizedVulnerabilities: z.array(
    z.object({
      vulnerability: z.string().describe('The name of the vulnerability.'),
      riskScore: z.number().describe('A numerical risk score for the vulnerability.'),
      explanation: z.string().describe('A concise explanation of the vulnerability and its potential impact.'),
    })
  ).describe('A list of vulnerabilities, each with a risk score and explanation, prioritized by risk score.'),
});
export type PrioritizeVulnerabilitiesOutput = z.infer<typeof PrioritizeVulnerabilitiesOutputSchema>;

export async function prioritizeVulnerabilities(input: PrioritizeVulnerabilitiesInput): Promise<PrioritizeVulnerabilitiesOutput> {
  return prioritizeVulnerabilitiesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'prioritizeVulnerabilitiesPrompt',
  input: {schema: PrioritizeVulnerabilitiesInputSchema},
  output: {schema: PrioritizeVulnerabilitiesOutputSchema},
  prompt: `You are a security expert tasked with prioritizing vulnerabilities based on their risk and impact.

  Analyze the following vulnerability data and provide a risk score (0-10) and a concise explanation for each vulnerability.
  Prioritize the vulnerabilities based on the risk score, with the highest risk vulnerabilities listed first.

Vulnerability Data:
{{{vulnerabilityData}}}

Output the vulnerabilities in a JSON array:
`,
});

const prioritizeVulnerabilitiesFlow = ai.defineFlow(
  {
    name: 'prioritizeVulnerabilitiesFlow',
    inputSchema: PrioritizeVulnerabilitiesInputSchema,
    outputSchema: PrioritizeVulnerabilitiesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);

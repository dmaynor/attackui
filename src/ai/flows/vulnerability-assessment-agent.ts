'use server';

/**
 * @fileOverview Vulnerability Assessment Agent that prioritizes identified vulnerabilities.
 *
 * - prioritizeVulnerabilities - A function that assesses and prioritizes vulnerabilities.
 * - PrioritizeVulnerabilitiesInput - The input type for the prioritizeVulnerabilities function.
 * - PrioritizeVulnerabilitiesOutput - The return type for the prioritizeVulnerabilities function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PrioritizeVulnerabilitiesInputSchema = z.object({
  vulnerabilityData: z.string().describe('Detailed data about the identified vulnerabilities.'),
});
export type PrioritizeVulnerabilitiesInput = z.infer<typeof PrioritizeVulnerabilitiesInputSchema>;

const PrioritizeVulnerabilitiesOutputSchema = z.object({
  prioritizedVulnerabilities: z.array(
    z.object({
      vulnerability: z.string().describe('The name of the vulnerability.'),
      riskScore: z.number().describe('A numerical risk score for the vulnerability (0-10, higher is more critical).'),
      explanation: z.string().describe('A concise explanation of the vulnerability and its potential impact.'),
    })
  ).describe('A list of vulnerabilities, each with a risk score and explanation, prioritized by risk score (highest risk first).'),
});
export type PrioritizeVulnerabilitiesOutput = z.infer<typeof PrioritizeVulnerabilitiesOutputSchema>;

export async function prioritizeVulnerabilities(input: PrioritizeVulnerabilitiesInput): Promise<PrioritizeVulnerabilitiesOutput> {
  return prioritizeVulnerabilitiesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'prioritizeVulnerabilitiesPrompt',
  input: {schema: PrioritizeVulnerabilitiesInputSchema},
  output: {schema: PrioritizeVulnerabilitiesOutputSchema},
  prompt: `You are the Vulnerability Assessment Agent. Adopt the persona of a lead security consultant: analytical, risk-aware, and direct.
  Your task is to prioritize vulnerabilities based on their potential risk and impact.

  Analyze the following vulnerability data. For each vulnerability, provide:
  1. A clear name for the vulnerability.
  2. A risk score between 0 (informational) and 10 (critical).
  3. A concise explanation of the vulnerability, its potential impact, and the reasoning for the assigned risk score. Your language should be direct, focusing on impact and remediation urgency.

  Prioritize the vulnerabilities in the output array with the highest risk vulnerabilities listed first.

Vulnerability Data:
{{{vulnerabilityData}}}

Output the vulnerabilities in the specified JSON array format.
`,
});

const prioritizeVulnerabilitiesFlow = ai.defineFlow(
  {
    name: 'prioritizeVulnerabilitiesFlow',
    inputSchema: PrioritizeVulnerabilitiesInputSchema,
    outputSchema: PrioritizeVulnerabilitiesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
